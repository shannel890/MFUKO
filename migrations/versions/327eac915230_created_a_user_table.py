"""created a user table

Revision ID: 327eac915230
Revises: 
Create Date: 2025-06-22 20:16:04.986959

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '327eac915230'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('old_value',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('new_value',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.alter_column('tenant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('payment_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.alter_column('payment_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('fees',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
        batch_op.alter_column('is_offline',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('sync_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('payment_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)

    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.alter_column('amenities',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('utility_bill_types',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('unit_numbers',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('deposit_policy',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.String(length=255),
               existing_nullable=True)

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=80),
               nullable=True)

    with op.batch_alter_table('tenant', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('property_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('due_day_of_month',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('grace_period_days',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('confirmed_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(length=80),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.create_unique_constraint(None, ['phone_number'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('phone_number',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=80),
               nullable=False)
        batch_op.alter_column('first_name',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=80),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=80),
               nullable=False)
        batch_op.drop_column('confirmed_at')

    with op.batch_alter_table('tenant', schema=None) as batch_op:
        batch_op.alter_column('grace_period_days',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('due_day_of_month',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('property_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(length=80),
               nullable=False)

    with op.batch_alter_table('property', schema=None) as batch_op:
        batch_op.alter_column('deposit_policy',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
        batch_op.alter_column('unit_numbers',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('utility_bill_types',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('amenities',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('payment', schema=None) as batch_op:
        batch_op.alter_column('payment_type',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('sync_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('is_offline',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('fees',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('payment_method',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('payment_date',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('tenant_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('audit_log', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('new_value',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('old_value',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    # ### end Alembic commands ###
